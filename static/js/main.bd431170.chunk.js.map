{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","redux/phonebooks/phonebooks-selectors.js","redux/phonebooks/phonebooks-actions.js","redux/phonebooks/phonebooks-operations.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/phonebooks/phonebooks-reducer.js","redux/phonebooks/store.js","index.js"],"names":["module","exports","getIsloadingContacts","state","contacts","loading","getFilter","filter","getItems","items","getVisibleContacts","createSelector","allContacts","filterNormalize","toLowerCase","contact","name","includes","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","ContactForm","inputId","uuidv4","number","handleInputChange","evt","console","log","currentTarget","value","setState","handleSubmit","preventDefault","props","find","alert","reset","addContact","className","styles","container","onSubmit","this","form","htmlFor","label","type","pattern","title","required","onChange","id","Component","connect","dispatch","phonebooksActions","post","then","data","catch","error","Ð¾nChange","e","onDeleteContact","delete","deleteContact","map","contactList","onClick","App","fetchContact","isloadingContacts","a","get","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","phonebooksReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oIACAA,EAAOC,QAAU,CAAC,UAAY,+BAA+B,MAAQ,6B,mBCArED,EAAOC,QAAU,CAAC,YAAc,mC,2JCCnBC,EAAuB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,SAE/CC,EAAY,SAAAH,GAAK,OAAIA,EAAMC,SAASG,QAEpCC,EAAW,SAAAL,GAAK,OAAIA,EAAMC,SAASK,OAEnCC,EAAqBC,YAC9B,CAACH,EAAUF,IACX,SAACM,EAAaL,GACV,IAAMM,EAAkBN,EAAOO,cAC/B,OAAOF,EAAYL,QAAO,SAAAQ,GAAO,OAC7BA,EAAQC,KAAKF,cAAcG,SAASJ,S,iDCXnCK,EAAsBC,YAAa,kCACnCC,EAAsBD,YAAa,kCACnCE,EAAoBF,YAAa,gCAIjCG,EAAoBH,YAAa,gCACjCI,EAAoBJ,YAAa,gCACjCK,EAAkBL,YAAa,8BAE/BM,EAAuBN,YAAa,mCACpCO,EAAuBP,YAAa,mCACpCQ,EAAqBR,YAAa,iCAGlCS,EAAeT,YAAa,2BCdzCU,IAAMC,SAASC,QAAU,wBAElB,I,WCGDC,E,4MACFC,QAAUC,c,EACV/B,MAAQ,CACJa,KAAM,GACNmB,OAAQ,I,EAGZC,kBAAoB,SAAAC,GAChBC,QAAQC,IAAIF,EAAIG,cAAcC,OAC9B,MAAwBJ,EAAIG,cAApBxB,EAAR,EAAQA,KAAMyB,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiB1B,EAAOyB,K,EAG5BE,aAAe,SAAAN,GAIX,GAHAA,EAAIO,iBACgB,EAAKC,MAAMzC,SAAS0C,MAAK,SAAA/B,GAAO,OAAIA,EAAQC,OAAS,EAAKb,MAAMa,MAAQD,EAAQoB,SAAW,EAAKhC,MAAMgC,UAKtH,OAFAY,MAAM,GAAD,OAAI,EAAK5C,MAAMa,KAAf,kCACL,EAAKgC,QAGT,EAAKH,MAAMI,WAAW,EAAK9C,MAAMa,KAAM,EAAKb,MAAMgC,QAClD,EAAKa,S,EAETA,MAAQ,WACJ,EAAKN,SAAS,CAAE1B,KAAM,GAAImB,OAAQ,M,4CAGtC,WACI,OAEI,qBAAKe,UAAWC,IAAOC,UAAvB,SACI,uBAAMC,SAAUC,KAAKX,aAAcO,UAAWC,IAAOI,KAArD,UACI,wBAAOC,QAASF,KAAKrB,QAASiB,UAAWC,IAAOM,MAAhD,kBAII,uBACIP,UAAU,wBACVQ,KAAK,OACL1C,KAAK,OACL2C,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRpB,MAAOa,KAAKnD,MAAMa,KAClB8C,SAAUR,KAAKlB,kBACf2B,GAAIT,KAAKrB,aAGjB,wBAAOiB,UAAWC,IAAOM,MAAzB,oBAEI,uBACIC,KAAK,MACL1C,KAAK,SACL2C,QAAQ,yFACRC,MAAM,giBACNnB,MAAOa,KAAKnD,MAAMgC,OAClB2B,SAAUR,KAAKlB,kBACfyB,UAAQ,OAIhB,wBAAQH,KAAK,SAASR,UAAU,sBAAhC,kC,GA/DMc,aA+EXC,eARS,SAAA9D,GAAK,MAAK,CAC9BC,SAAUI,EAASL,OAEI,SAAA+D,GAAQ,MAAK,CACpCjB,WAAY,SAACjC,EAAMmB,GAAP,OAAkB+B,ED/DR,SAAClD,EAAMmB,GAAP,OAAkB,SAAA+B,GACxC,IAAMnD,EAAU,CACZC,OACAmB,UAEJ+B,EAASC,KAETtC,IACKuC,KAAK,YAAarD,GAClBsD,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OACFJ,EAASC,EAAoCG,OAChDC,OAAM,SAAAC,GAAK,OAAIN,EAASC,EAAkCK,QCoDxBvB,CAAWjC,EAAMmB,QAI7C8B,CAA6CjC,GCvD7CiC,eATS,SAAC9D,GAAD,MAAY,CAChCsC,MAAOnC,EAAUH,OAIM,SAAA+D,GAAQ,MAAK,CACpCO,gBAAU,SAAAC,GAAC,OAAIR,EAAStC,EAAa8C,EAAElC,cAAcC,YAG1CwB,EAxBA,SAAC,GAAD,IAAGxB,EAAH,EAAGA,MAAOgC,EAAV,EAAUA,cAAV,OACX,0DAEI,uBACIf,KAAK,OACLjB,MAAOA,EACPqB,SAAUW,U,iBC+BPR,eAXS,SAAC9D,GAAD,MAAY,CAChCC,SAAUM,EAAmBP,OAIN,SAAA+D,GAAQ,MAAK,CACpCS,gBAAiB,SAAAZ,GAAE,OAAIG,EHNE,SAAAH,GAAE,OAAI,SAAAG,GAC/BA,EAASC,KAETtC,IACK+C,OADL,oBACyBb,IACpBM,MAAK,kBAAMH,EAASC,EAAuCJ,OAC3DQ,OAAM,SAAAC,GAAK,OAAIN,EAASC,EAAqCK,QGAlCK,CAAcd,QAKnCE,EApCK,SAAC,GAAmC,IAAjC7D,EAAgC,EAAhCA,SAAUuE,EAAsB,EAAtBA,gBAC7B,OACI,qBAAKzB,UAAU,oBAAf,SACI,6BACK9C,EAAS0E,KAAI,SAAA/D,GAAO,OACjB,qBAAImC,UAAWC,IAAO4B,YAAtB,UAAmDhE,EAAQC,KAA3D,MAAoED,EAAQoB,OACxE,wBAAQ6C,QAAS,kBAAML,EAAgB5D,EAAQgD,KAA/C,sBADoC7B,yBCJtD+C,E,4MACJ9E,MAAQ,G,uDAUR,WACEmD,KAAKT,MAAMqC,iB,oBAGb,WACE,OACE,gCACE,2CACA,cAAC,EAAD,IAEA,0CACA,cAAC,EAAD,IACC5B,KAAKT,MAAMsC,mBAAqB,4CACjC,cAAC,EAAD,W,GAxBUnB,aAwCHC,eARS,SAAA9D,GAAK,MAAK,CAChCgF,kBAAmBjF,EAAqBC,OAGf,SAAA+D,GAAQ,MAAK,CACtCgB,aAAc,kBAAMhB,EJ1CM,uCAAM,WAAMA,GAAN,iBAAAkB,EAAA,6DAC9BlB,EAASC,KADqB,kBAIHtC,IAAMwD,IAAI,cAJP,gBAIlBf,EAJkB,EAIlBA,KACRJ,EAASC,EAAsCG,IALrB,gDAO1BJ,EAASC,EAAA,OAPiB,yDAAN,2DI6CbF,CAA6CgB,G,gDCjCtDxE,EAAQ6E,YAAc,IAAD,mBACtBlE,GAAsB,SAACmE,EAAD,YAAMC,WADN,cAEtBjE,GAAoB,SAACpB,EAAD,YAAUqF,SAAV,mBAAqCrF,OAFnC,cAGtBuB,GAAuB,SAACvB,EAAD,OAAUqF,EAAV,EAAUA,QAAV,OAAwBrF,EAAMI,QAAO,SAAAQ,GAAO,OAChEA,EAAQgD,KAAOyB,QAJI,IAOrBnF,GAAUiF,aAAc,GAAD,mBACxBpE,GAAsB,kBAAM,KADJ,cAExBE,GAAsB,kBAAM,KAFJ,cAGxBC,GAAoB,kBAAM,KAHF,cAIxBC,GAAoB,kBAAM,KAJF,cAKxBC,GAAoB,kBAAM,KALF,cAMxBC,GAAkB,kBAAM,KANA,cAOxBC,GAAuB,kBAAM,KAPL,cAQxBC,GAAuB,kBAAM,KARL,cASxBC,GAAqB,kBAAM,KATH,IAYvBpB,GAAS+E,YAAc,GAAD,eACvB1D,GAAe,SAAC2D,EAAD,YAAMC,YAGXC,eAAgB,CAC3BhF,QACAF,UACAF,aC/BEqF,GAAU,sBAAOC,YAAqB,CACxCC,kBAAmB,CACfC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAFlD,CAMZC,MAaWC,GAVDC,YAAe,CACzBC,QAAS,CACLnG,SAAUoG,IAEdd,cACAe,UAAUC,I,SCjBdC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,GAAjB,SAEE,cAAC,KAAD,UACE,cAAC,EAAD,UAKNS,SAASC,eAAe,W","file":"static/js/main.bd431170.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__1iAYU\",\"label\":\"ContactForm_label__kYpwy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__16VGq\"};","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getIsloadingContacts = state => state.contacts.loading;\r\n\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getItems = state => state.contacts.items;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n    [getItems, getFilter],\r\n    (allContacts, filter) => {\r\n        const filterNormalize = filter.toLowerCase();\r\n        return allContacts.filter(contact =>\r\n            contact.name.toLowerCase().includes(filterNormalize),\r\n        );\r\n\r\n    }\r\n)\r\n\r\n\r\n// export const getVisibleContacts = state => {\r\n//     const allContacts = getItems(state);\r\n//     const filter = getFilter(state);\r\n//     const filterNormalize = filter.toLowerCase();\r\n\r\n//     return allContacts.filter(contact =>\r\n//         contact.name.toLowerCase().includes(filterNormalize),\r\n//     );\r\n// }","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('phonebooks/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('phonebooks/fetchContactSuccess');\r\nexport const fetchContactError = createAction('phonebooks/fetchContactError');\r\n\r\n\r\n\r\nexport const addContactRequest = createAction('phonebooks/addContactRequest');\r\nexport const addContactSuccess = createAction('phonebooks/addContactSuccess');\r\nexport const addContactError = createAction('phonebooks/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('phonebooks/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('phonebooks/deleteContactSuccess');\r\nexport const deleteContactError = createAction('phonebooks/deleteContactError');\r\n\r\n\r\nexport const changeFilter = createAction('phonebooks/changeFilter')\r\n","import axios from 'axios';\r\nimport * as phonebooksActions from './phonebooks-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nexport const fetchContact = () => async dispatch => {\r\n    dispatch(phonebooksActions.fetchContactRequest());\r\n\r\n    try {\r\n        const { data } = await axios.get('./contacts');\r\n        dispatch(phonebooksActions.fetchContactSuccess(data));\r\n    } catch (error) {\r\n        dispatch(phonebooksActions.fetchContactError(error));\r\n    }\r\n    // axios\r\n    //     .get('./contacts')\r\n    //     .then(({ data }) => dispatch(phonebooksActions.fetchContactSuccess(data)))\r\n    //     .catch(error => dispatch(phonebooksActions.fetchContactError(error)));\r\n}\r\n\r\nexport const addContact = (name, number) => dispatch => {\r\n    const contact = {\r\n        name,\r\n        number,\r\n    };\r\n    dispatch(phonebooksActions.addContactRequest());\r\n\r\n    axios\r\n        .post('/contacts', contact)\r\n        .then(({ data }) =>\r\n            dispatch(phonebooksActions.addContactSuccess(data)))\r\n        .catch(error => dispatch(phonebooksActions.addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = id => dispatch => {\r\n    dispatch(phonebooksActions.deleteContactRequest());\r\n\r\n    axios\r\n        .delete(`/contacts/${id}`)\r\n        .then(() => dispatch(phonebooksActions.deleteContactSuccess(id)))\r\n        .catch(error => dispatch(phonebooksActions.deleteContactError(error)));\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport styles from './ContactForm.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { getItems, addContact } from '../../redux/phonebooks';\r\n// import * as phonebooksOperations from '../../redux/phonebooks/phonebooks-operations';\r\n// import * as phonebookSelectors from '../../redux/phonebooks/phonebooks-selectors';\r\n\r\nclass ContactForm extends Component {\r\n    inputId = uuidv4();\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n\r\n    };\r\n    handleInputChange = evt => {\r\n        console.log(evt.currentTarget.value);\r\n        const { name, value } = evt.currentTarget;\r\n        this.setState({ [name]: value });\r\n\r\n    };\r\n    handleSubmit = evt => {\r\n        evt.preventDefault();\r\n        const findContact = this.props.contacts.find(contact => contact.name === this.state.name && contact.number === this.state.number);\r\n\r\n        if (findContact) {\r\n            alert(`${this.state.name} is already in contacts!`);\r\n            this.reset();\r\n            return;\r\n        }\r\n        this.props.addContact(this.state.name, this.state.number);\r\n        this.reset();\r\n    }\r\n    reset = () => {\r\n        this.setState({ name: '', number: '' });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className={styles.container}>\r\n                <form onSubmit={this.handleSubmit} className={styles.form}>\r\n                    <label htmlFor={this.inputId} className={styles.label}>\r\n\r\n                        Name:\r\n\r\n                        <input\r\n                            className=\"Container-form__input\"\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            pattern=\"^[a-zA-ZÐ°-ÑÐ-Ð¯]+(([' -][a-zA-ZÐ°-ÑÐ-Ð¯ ])?[a-zA-ZÐ°-ÑÐ-Ð¯]*)*$\"\r\n                            title=\"ÐÐ¼Ñ Ð¼Ð¾Ð¶ÐµÑ ÑÐ¾ÑÑÐ¾ÑÑÑ ÑÐ¾Ð»ÑÐºÐ¾ Ð¸Ð· Ð±ÑÐºÐ², Ð°Ð¿Ð¾ÑÑÑÐ¾ÑÐ°, ÑÐ¸ÑÐµ Ð¸ Ð¿ÑÐ¾Ð±ÐµÐ»Ð¾Ð². ÐÐ°Ð¿ÑÐ¸Ð¼ÐµÑ Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan Ð¸ Ñ. Ð¿.\"\r\n                            required\r\n                            value={this.state.name}\r\n                            onChange={this.handleInputChange}\r\n                            id={this.inputId}\r\n                        />\r\n                    </label>\r\n                    <label className={styles.label}>\r\n                        Number:\r\n                        <input\r\n                            type=\"tel\"\r\n                            name=\"number\"\r\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                            title=\"ÐÐ¾Ð¼ÐµÑ ÑÐµÐ»ÐµÑÐ¾Ð½Ð° Ð´Ð¾Ð»Ð¶ÐµÐ½ ÑÐ¾ÑÑÐ¾ÑÑÑ ÑÐ¸ÑÑ Ð¸ Ð¼Ð¾Ð¶ÐµÑ ÑÐ¾Ð´ÐµÑÐ¶Ð°ÑÑ Ð¿ÑÐ¾Ð±ÐµÐ»Ñ, ÑÐ¸ÑÐµ, ÐºÑÑÐ³Ð»ÑÐµ ÑÐºÐ¾Ð±ÐºÐ¸ Ð¸ Ð¼Ð¾Ð¶ÐµÑ Ð½Ð°ÑÐ¸Ð½Ð°ÑÑÑÑ Ñ +\"\r\n                            value={this.state.number}\r\n                            onChange={this.handleInputChange}\r\n                            required\r\n                        />\r\n                    </label>\r\n\r\n                    <button type=\"submit\" className=\"Container-form__btn\">Add Contact</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    };\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    contacts: getItems(state),\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    addContact: (name, number) => dispatch(addContact(name, number)),\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n// import styles from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { getFilter, changeFilter } from '../../redux/phonebooks';\r\n// import * as phonebooksActions from '../../redux/phonebooks/phonebooks-actions';\r\n// import * as phonebookSelectors from '../../redux/phonebooks/phonebooks-selectors';\r\n\r\nconst Filter = ({ value, Ð¾nChange }) => (\r\n    <label>\r\n        FInd contacts by name\r\n        <input\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={Ð¾nChange}\r\n        />\r\n    </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    value: getFilter(state),\r\n\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    Ð¾nChange: e => dispatch(changeFilter(e.currentTarget.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { getVisibleContacts, deleteContact } from '../../redux/phonebooks';\r\n// import * as phonebookOperations from '../../redux/phonebooks/phonebooks-operations';\r\n// import * as phonebookSelectors from '../../redux/phonebooks/phonebooks-selectors';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n    return (\r\n        <div className=\"Contact-container\">\r\n            <ul >\r\n                {contacts.map(contact => (\r\n                    <li className={styles.contactList} key={uuidv4()}>{contact.name} : {contact.number}\r\n                        <button onClick={() => onDeleteContact(contact.id)} >Delete</button>\r\n                    </li>))\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nContactList.propTypes = {\r\n    contact: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n            id: PropTypes.string.isRequired,\r\n\r\n        })\r\n    ),\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    contacts: getVisibleContacts(state),\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onDeleteContact: id => dispatch(deleteContact(id)),\r\n\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport { getIsloadingContacts, fetchContact } from './redux/phonebooks';\n// import * as phonebookOperations from './redux/phonebooks/phonebooks-operations';\n// import * as phonebookSelectors from './redux/phonebooks/phonebooks-selectors';\n\nclass App extends Component {\n  state = {\n    // contacts: [\n    //   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    //   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    //   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    //   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    // ],\n    // filter: '',\n  }\n\n  componentDidMount() {\n    this.props.fetchContact();\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm />\n\n        <h2>Contacts</h2>\n        <Filter />\n        {this.props.isloadingContacts && <h1>loading...</h1>}\n        <ContactList />\n\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isloadingContacts: getIsloadingContacts(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContact: () => dispatch(fetchContact())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    changeFilter,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n} from './phonebooks-actions';\r\n\r\n\r\n\r\nconst items = createReducer([], {\r\n    [fetchContactSuccess]: (_, { payload }) => payload,\r\n    [addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n    [deleteContactSuccess]: (state, { payload }) => state.filter(contact =>\r\n        contact.id !== payload),\r\n})\r\n\r\nconst loading = createReducer(false, {\r\n    [fetchContactRequest]: () => true,\r\n    [fetchContactSuccess]: () => false,\r\n    [fetchContactError]: () => false,\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_, { payload }) => payload,\r\n})\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    loading,\r\n})\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from 'redux-logger';\r\nimport {\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER\r\n} from 'redux-persist';\r\nimport phonebooksReducer from \"./phonebooks-reducer\";\r\n\r\nconst middleware = [...getDefaultMiddleware({\r\n    serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n    }\r\n}),\r\n    // myMiddleware,\r\n    logger,\r\n];\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: phonebooksReducer,\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport store from './redux/phonebooks/store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}